# [<tag>] (If applied, this commit will...) <subject> (Max 50 char)
# |<----   Preferably using up to 50 chars   --->|
# Example:
# [feat] Implement automated commit messages

# (Optional) If pairing, then list all co-authors, so version control systems can connect teams.
# Co-authored-by: Name <name@example.com>

# (Optional) Explain why this change is being made
# |<----   Try To Limit Each Line to a Maximum Of 72 Characters   ---->|
# Why is this change happening, e.g. goals, use cases, stories, etc.?
# Why:

# How is this change happening, e.g. implementations, algorithms, etc.?
# How:

# (Optional) Provide links or keys to any relevant tickets, articles or other resources
# Example: Github issue #23

# (Optional) See links to relevant web pages, issue trackers, blog articles, etc.
# See: https://example.com/
# See: [Example Page](https://example.com/)

# --- COMMIT END ---
# ## Help ##

# Subject line imperative verbs:
#
# Tag can be
#   feat     (creating a new feature)
#   drop     (delete a capability e.g. feature, test, dependency)
#   fix      (Fix an issue e.g. bug, typo, accident, misstatement)
#   test     (adding or refactoring tests; no production code change)
#   bump     (increase the version of something e.g. a dependency)
#   make     (change the build process, or tools, or infrastructure)
#   start    (begin doing something; e.g. enable a toggle, feature flag, etc)
#   stop     (end doing something; e.g. disable a toggle, feature flag, etc)
#   perf     (a change that MUST be just about performance, e.g. speed up code)
#   doc      (a change that MUST be only in the documentation, e.g. help files)
#   refactor (a change that MUST be just refactoring)
#   reformat (a change that MUST be just format, e.g. indent line, trim space, etc)
#   WIP      (a Work In Progress; for intermediate commits to keep patches reasonably sized)

# Note: Multiple tags can be combined, e.g. [fix][jsr292] Fix issue X with methodhandles
# --------------------
# Remember to:
#   * Capitalise the subject line
#   * Use the imperative mood in the subject line
#   * Do not end the subject line with a period
#   * Separate subject from body with a blank line
#   * Use the body to explain what and why vs. how
#   * Can use multiple lines with "-" or "*" for bullet points in body
# --------------------
#
# ## About ##
#
# This is our team's starting point for our git commit messages.
# You can edit this template as you like, to customize it.
#
# For more information about git commit ideas and help:
# https://github.com/joelparkerhenderson/git_commit_message
#
#
# ## Usage ##
#
# Put the template file here:
#
#     ~/.git_commit_template.txt
#
# Configure git to use the template file by running:
#
#     git config --global commit.template ~/.git_commit_template.txt
#
# Add the template file to the ~/.gitconfig file:
#
#     [commit]
#       template = ~/.git_commit_template.txt
#
# If you prefer other file locations or ways of working,
# you can freely adjust the usage as you like.
#
# This repo has been based on the great work from Joel Parker Henderson, 
# for reference see here https://github.com/joelparkerhenderson/git_commit_template
